cmake_minimum_required(VERSION 2.8)
project(sdr_power)
list(APPEND CMAKE_MODULE_PATH ${CMAKE_CURRENT_SOURCE_DIR}/cmake/Modules)

OPTION( WITHOUT_HACKRF "Disable hackrf support" OFF )
OPTION( WITHOUT_BLADERF "Disable bladerf support" OFF )
OPTION( WITHOUT_RTLSDR "Disable rtlsdr support" OFF )
SET( HACKRF_ENABLED OFF )
SET( BLADERF_ENABLED OFF )
SET( RTLSDR_ENABLED OFF )
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=gnu99")

if (NOT WITHOUT_RTLSDR)
  find_package(RTLSDR)
  if (NOT RTLSDR_FOUND)
      message(STATUS "librtlsdr not found, disabling rtlsdr backend")
  else ()
      message(STATUS "Using librtlsdr from " ${RTLSDR_INCLUDE_DIR})
      include_directories(${RTLSDR_INCLUDE_DIR})
      set (RTLSDR_ENABLED ON)
      list (APPEND BACKEND_SOURCES backends/rtlsdr_convenience.c backends/rtlsdr.c)
      list (APPEND BACKEND_LIBRARIES ${RTLSDR_LIBRARY})
  endif ()
else ()
    message(STATUS "Disabling rtlsdr backend by user request")
endif ()

if (NOT WITHOUT_HACKRF)
    find_package(HACKRF)
    if (NOT HACKRF_FOUND)
        message(STATUS "libhackrf not found, disabling hackrf backend")
    else ()
        message(STATUS "Using libhackrf from " ${HACKRF_INCLUDE_DIR})
        include_directories(${HACKRF_INCLUDE_DIR})
        set (HACKRF_ENABLED ON)
        list (APPEND BACKEND_SOURCES backends/hackrf.c)
        list (APPEND BACKEND_LIBRARIES ${HACKRF_LIBRARY})
    endif ()
else ()
    message(STATUS "Disabling hackrf backend by user request")
endif ()

if (NOT WITHOUT_BLADERF)
    find_package(BLADERF)
    if (NOT BLADERF_FOUND)
        message(STATUS "libbladeRF not found, disabling bladerf backend")
    else ()
        message(STATUS "Using libbladeRF from " ${BLADERF_INCLUDE_DIR})
        include_directories(${BLADERF_INCLUDE_DIR})
        set (BLADERF_ENABLED ON)
    endif ()
else ()
    message(STATUS "Disabling hackrf backend by user request")
endif ()

if (NOT HACKRF_ENABLED AND NOT BLADERF_ENABLED AND NOT RTLSDR_ENABLED)
    message(WARNING "No radio backends available, only dummy backends usable")
endif()

CONFIGURE_FILE( ${CMAKE_SOURCE_DIR}/config.h.in ${CMAKE_SOURCE_DIR}/config.h )

message(STATUS "Available radio backends:")
if (HACKRF_ENABLED)
    message(STATUS " - hackrf")
endif()
if (BLADERF_ENABLED)
    message(STATUS " - bladerf")
endif()
if (RTLSDR_ENABLED)
    message(STATUS " - rtlsdr")
endif()

MESSAGE(STATUS "BladeRF Library: " ${BLADERF_LIBRARY})

find_library(M_LIB m)

set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")

set(SOURCE_FILES ${BACKEND_SOURCES} sdr-power.c backend.c backend.h backends/hackrf.c backends/ringbuffer.c conversions.c conversions.h backends/dummy.h backends/dummy.c)
add_executable(sdr_power ${SOURCE_FILES})
target_link_libraries(sdr_power ${BACKEND_LIBRARIES} ${M_LIB})
install(TARGETS sdr_power DESTINATION bin)

